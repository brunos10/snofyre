#summary Getting started with Snofyre's Scripting Console

= Getting started with Snofyre's Scripting Console =

Traditionally developers and advanced users have had to use an IDE and follow the following steps to start using APIs. We've tried to make it easier to access Snofyre's API for advanced users and developers by providing a console based access to Snofyre's underlying services. 

So the following steps that you'd expect to follow to create a {{{Hello World}}} example, are not necessary for Snofyre:

  * ~~Install Maven~~
  * ~~Install Mercurial~~
  * ~~Check out Snofyre Code from the Snofyre Repo~~
  * ~~Compile using mvn clean install~~
  * ~~Now create a class {{{Hello Services}}}~~
  * ~~Import {{{uk.nhs.cfh.dsp.snomed.dao.TerminologyService}}}~~
  * ~~So and so forthâ€¦~~

Instead you can access most of Snofyre's underlying services using Snofyre's Scripting Console. In fact, Snofyre's Scripting Console allows access to most of Java's functionality because it is a Groovy Console.

== Starting Snofyre's Scripting Console ==
In order to launch Snofyre's Scripting Console:
  * Select {{{Launch scripting console}}} from under {{{Tools}}} menu.
  * This should launch the scripting console as shown below

=== First steps with scripting ===
To get started with scripting Snofyre, lets see how easy it is to create a {{{Hello Snofyre}}} example.
  * Type {{{print 'Hello Snofyre'}}} in the scripting console as shown below.
{{{
print 'Hello Snofyre'
}}}
  * Now run this code using the {{{Run script}}} button. You should see the following output

  * Remember when we said you have access to all of Java from inside the scripting console? Let's show you how. Lets use Java Swing to recreate a more fancy version of our {{{Hello Snofyre}}} example.
  * Clear the scripting console and type the following code as shown below
{{{
import javax.swing.*
JOptionPane.showMessageDialog(null, "Hello Snofyre")
}}}
  * Now run this code using the {{{Run script}}} button
  * This should display a simple (arguably more pretty) {{{Hello Snofyre}}} message on your screen as shown below.

= Details =

|| *Service Name* || *Service Description* ||
|| terminologyDAO || Access to SNOMED CT content ||
|| normalFormGenerator || Generates Normal Forms for Concepts/Expressions ||
|| hierarchyProvider || Provides hierarchy look up for SNOMED CT concepts ||
|| cgfConverter || Converts a concept/expression into its compositional grammar form ||
|| randomSubtypeGenerator || Returns a random subtype for a given concept or expression ||
|| expressionRender || Returns a human readable rendering for Concepts/Expressions ||
|| queryExpressionFactory || Factory service for creating {{{query}}} objects ||
|| mrcmService || Service that returns sanctioned attributes and values for a given concept ||
|| situationWrapper || Wraps concept/expression in a Situation With Explicit Context wrapper ||