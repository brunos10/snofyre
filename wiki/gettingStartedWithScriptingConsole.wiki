#summary Getting started with Snofyre's Scripting Console

= Getting started with Snofyre's Scripting Console =

Traditionally developers and advanced users have had to use an IDE and follow the following steps to start using APIs. We've tried to make it easier to access Snofyre's API for advanced users and developers by providing a console based access to Snofyre's underlying services. 

So the following steps that you'd expect to follow to create a {{{Hello World}}} example, are not necessary for Snofyre:

  # ~~Install Maven~~
  # ~~Install Subversion~~
  # ~~Check out Snofyre Code from the Snofyre Repo~~
  # ~~Compile using mvn clean install~~
  # ~~Now create a class {{{Hello Services}}}~~
  # ~~Import {{{uk.nhs.cfh.dsp.snomed.dao.TerminologyService}}}~~
  # ~~So and so forthâ€¦~~

Instead you can access most of Snofyre's underlying services using Snofyre's Scripting Console. In fact, Snofyre's Scripting Console allows access to most of Java's functionality because it is a Groovy Console.

== Starting Snofyre's Scripting Console ==
In order to launch Snofyre's Scripting Console:
  * Select {{{Launch scripting console}}} from under {{{Tools}}} menu.
  * This should launch the scripting console as shown below.
  * You can minimise Snofyre application window while you are working on the scripting console.
  * Remember we said, minimise not *close*!

=== First steps with scripting ===
To get started with scripting Snofyre, lets see how easy it is to create a {{{Hello Snofyre}}} example.
  * Type {{{print "Hello Snofyre"}}} in the scripting console as shown below.
{{{
print "Hello Snofyre"
}}}
  * Now run this code using the {{{Run script}}} button. You should see the following output

  * Remember when we said you have access to all of Java from inside the scripting console? Let's show you how. Lets use Java Swing to recreate a more fancy version of our {{{Hello Snofyre}}} example.
  * Clear the scripting console and type the following code as shown below
{{{
import javax.swing.*
JOptionPane.showMessageDialog(null, "Hello Snofyre")
}}}
  * Now run this code using the {{{Run script}}} button
  * This should display a simple (arguably more pretty) {{{Hello Snofyre}}} message on your screen as shown below.

=== Accessing Snofyre's Services ===
One of the most common operations you might perform if you were building a SNOMED CT enabled application is retrieving SNOMED CT content. A typical example of this might be getting the {{{Fully Specified Name}}} for a SNOMED CT concept. Let us show you how easy it is to do this using Snofyre's underlying Services. Snofyre provides a service called {{{TerminologyDAO}}} that offers this functionality out of the box. Let us see how we can use this to retrieve the {{{Fully Specified Name}}} for a SNOMED CT concept with an ID {{{22298006}}}.
  * Clear the scripting console and type the following into the console
{{{
print terminologyDAO.getTerminologyConcept("22298006").getFullySpecifiedName()
}}}
  * This should print out the following on in the console output
{{{
Myocardial Infarction (disorder)
}}}
  * Yep thats right! We've just looked up the {{{Fully Specified Name}}} for a given {{{concept id}}} in SNOMED CT using a single line of code!

If all of that sounds interesting, then we've just scratched the surface of Snofyre's API. Head over to the [advancedScripting Advanced scripting] section to learn more.